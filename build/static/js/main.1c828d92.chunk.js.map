{"version":3,"sources":["components/ClientDetails.js","components/Dates.js","components/Footer.js","components/Header.js","components/MainDetails.js","components/Notes.js","components/Table.js","components/TableForm.js","App.js","index.js"],"names":["ClientDetails","clientName","clientAddress","className","Dates","invoiceNumber","invoiceDate","dueDate","Footer","name","email","website","phone","bankAccount","bankName","href","target","rel","Header","handlePrint","onClick","MainDetails","address","Notes","notes","Table","list","total","width","map","id","description","quantity","price","amount","Fragment","toLocaleString","TableForm","setDescription","setQuantity","setPrice","setAmount","setList","setTotal","useState","isEditing","setIsEditing","useEffect","rows","document","querySelectorAll","sum","i","length","isNaN","innerHTML","parseInt","onSubmit","e","preventDefault","newItems","uuidv4","htmlFor","type","placeholder","value","onChange","filter","row","deleteRow","editingRow","find","editRow","App","showInvoice","setShowInvoice","setName","setAddress","setEmail","setPhone","setBankName","setBankAccount","setWebsite","setClientName","setClientAddress","setInvoiceNumber","setInvoiceDate","setDueDate","setNotes","window","print","autoComplete","cols","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c828d92.chunk.js","sourcesContent":["export default function ClientDetails({ clientName, clientAddress }) {\n  return (\n    <>\n      <section className=\"mt-10\">\n        <h2 className=\"text-2xl uppercase font-bold mb-1\">{clientName}</h2>\n        <p>{clientAddress}</p>\n      </section>\n    </>\n  )\n}\n","export default function Dates({ invoiceNumber, invoiceDate, dueDate }) {\n  return (\n    <>\n      <article className=\"mt-10 mb-14 flex items-end justify-end\">\n        <ul>\n          <li className=\"p-1 \">\n            <span className=\"font-bold\">Invoicer number:</span> {invoiceNumber}\n          </li>\n          <li className=\"p-1 bg-gray-100\">\n            <span className=\"font-bold\">Invoice date:</span> {invoiceDate}\n          </li>\n          <li className=\"p-1 \">\n            <span className=\"font-bold\">Due date:</span> {dueDate}\n          </li>\n        </ul>\n      </article>\n    </>\n  )\n}\n","export default function Footer({\n  name,\n  email,\n  website,\n  phone,\n  bankAccount,\n  bankName,\n}) {\n  return (\n    <>\n      <footer className=\"footer border-t-2 border-gray-300 pt-5\">\n        <ul className=\"flex flex-wrap items-center justify-center\">\n          <li>\n            <span className=\"font-bold\">Your name:</span> {name}\n          </li>\n          <li>\n            <span className=\"font-bold\">Your email:</span> {email}\n          </li>\n          <li>\n            <span className=\"font-bold\">Phone number:</span> {phone}\n          </li>\n          <li>\n            <span className=\"font-bold\">Bank:</span> {bankName}\n          </li>\n          <li>\n            <span className=\"font-bold\">Account holder:</span> {name}\n          </li>\n          <li>\n            <span className=\"font-bold\">Account number:</span> {bankAccount}\n          </li>\n          <li>\n            <span className=\"font-bold\">Website:</span>{\" \"}\n            <a href={website} target=\"_blank\" rel=\"noopenner noreferrer\">\n              {website}\n            </a>\n          </li>\n        </ul>\n      </footer>\n    </>\n  )\n}\n","export default function Header({ handlePrint }) {\n  return (\n    <>\n      <header className=\"flex flex-col items-center justify-center mb-5 xl:flex-row xl:justify-between\">\n        <div>\n          <h1 className=\"font-bold uppercase tracking-wide text-4xl mb-3\">\n            Invoicer\n          </h1>\n        </div>\n\n        <div>\n          <ul className=\"flex items-center justify-between flex-wrap\">\n            <li>\n              <button\n                onClick={handlePrint}\n                className=\"bg-gray-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-gray-500 hover:bg-transparent hover:text-red-500 transition-all duration-300\"\n              >\n                Print\n              </button>\n            </li>\n            <li className=\"mx-2\">\n              <button className=\"bg-gray-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-gray-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300\">\n                Download\n              </button>\n            </li>\n            <li>\n              <button className=\"bg-gray-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-gray-500 hover:bg-transparent hover:text-green-500 transition-all duration-300\">\n                Send\n              </button>\n            </li>\n          </ul>\n        </div>\n      </header>\n    </>\n  )\n}\n","export default function MainDetails({ name, address }) {\n  return (\n    <>\n      <section className=\"flex flex-col items-end justify-end\">\n        <h2 className=\"font-bold text-xl uppercase mb-1 md:text-4xl\">{name}</h2>\n        <p>{address}</p>\n      </section>\n    </>\n  )\n}\n","export default function Notes({ notes }) {\n  return (\n    <>\n      <section className=\"mt-10 mb-5\">\n        <p className=\"lg:w-1/2 text-justify\">{notes}</p>\n      </section>\n    </>\n  )\n}\n","import React from \"react\"\n\nexport default function Table({ list, total }) {\n  return (\n    <>\n      <table width=\"100%\" className=\"mb-10\">\n        <thead>\n          <tr className=\"bg-gray-100 p-1\">\n            <td className=\"font-bold\">Description</td>\n            <td className=\"font-bold\">Quantity</td>\n            <td className=\"font-bold\">Price</td>\n            <td className=\"font-bold\">Amount</td>\n          </tr>\n        </thead>\n        {list.map(({ id, description, quantity, price, amount }) => (\n          <React.Fragment key={id}>\n            <tbody>\n              <tr>\n                <td>{description}</td>\n                <td>{quantity}</td>\n                <td>{price}</td>\n                <td>{amount}</td>\n              </tr>\n            </tbody>\n          </React.Fragment>\n        ))}\n      </table>\n\n      <div>\n        <h2 className=\"flex items-end justify-end text-gray-800 text-4xl font-bold\">\n          Rs. {total.toLocaleString()}\n        </h2>\n      </div>\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport default function TableForm({\n  description,\n  setDescription,\n  quantity,\n  setQuantity,\n  price,\n  setPrice,\n  amount,\n  setAmount,\n  list,\n  setList,\n  total,\n  setTotal,\n}) {\n  const [isEditing, setIsEditing] = useState(false)\n\n  // Submit form function\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const newItems = {\n      id: uuidv4(),\n      description,\n      quantity,\n      price,\n      amount,\n    }\n    setDescription(\"\")\n    setQuantity(\"\")\n    setPrice(\"\")\n    setAmount(\"\")\n    setList([...list, newItems])\n    setIsEditing(false)\n  }\n\n  // Calculate items amount function\n  useEffect(() => {\n    const calculateAmount = (amount) => {\n      setAmount(quantity * price)\n    }\n\n    calculateAmount(amount)\n  }, [amount, price, quantity, setAmount])\n\n  // Calculate total amount of items in table\n  useEffect(() => {\n    let rows = document.querySelectorAll(\".amount\")\n    let sum = 0\n\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].className === \"amount\") {\n        sum += isNaN(rows[i].innerHTML) ? 0 : parseInt(rows[i].innerHTML)\n        setTotal(sum)\n      }\n    }\n  })\n\n  // Edit function\n  const editRow = (id) => {\n    const editingRow = list.find((row) => row.id === id)\n    setList(list.filter((row) => row.id !== id))\n    setIsEditing(true)\n    setDescription(editingRow.description)\n    setQuantity(editingRow.quantity)\n    setPrice(editingRow.price)\n  }\n\n  // Delete function\n  const deleteRow = (id) => setList(list.filter((row) => row.id !== id))\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"flex flex-col md:mt-16\">\n          <label htmlFor=\"description\">Item description</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            placeholder=\"Item Name\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n\n        <div className=\"md:grid grid-cols-3 gap-10\">\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"quantity\">Quantity</label>\n            <input\n              type=\"text\"\n              name=\"quantity\"\n              id=\"quantity\"\n              placeholder=\"Quantity\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            />\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"price\">Price (Rupees.)</label>\n            <input\n              type=\"text\"\n              name=\"price\"\n              id=\"price\"\n              placeholder=\"Price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </div>\n\n          <div className=\"flex flex-col\">\n            <label htmlFor=\"amount\">Amount (Rupees.)</label>\n            <p>{amount}</p>\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"mb-5 bg-blue-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-blue-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300\"\n        >\n          {isEditing ? \"Editing Row Item\" : \"Editing Item Info\"}\n        </button>\n      </form>\n\n      {/* Table items */}\n\n      <table width=\"100%\" className=\"mb-10\">\n        <thead>\n          <tr className=\"bg-gray-100 p-1\">\n            <td className=\"font-bold\">Description</td>\n            <td className=\"font-bold\">Quantity</td>\n            <td className=\"font-bold\">Price</td>\n            <td className=\"font-bold\">Amount</td>\n          </tr>\n        </thead>\n        {list.map(({ id, description, quantity, price, amount }) => (\n          <React.Fragment key={id}>\n            <tbody>\n              <tr>\n                <td>{description}</td>\n                <td>{quantity}</td>\n                <td>{price}</td>\n                <td className=\"amount\">{amount}</td>\n                <td>\n                  <button onClick={() => deleteRow(id)}>\n                    <AiOutlineDelete className=\"text-red-500 font-bold text-xl\" />\n                  </button>\n                </td>\n                <td>\n                  <button onClick={() => editRow(id)}>\n                    <AiOutlineEdit className=\"text-green-500 font-bold text-xl\" />\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </React.Fragment>\n        ))}\n      </table>\n\n      <div>\n        <h2 className=\"flex items-end justify-end text-gray-800 text-4xl font-bold\">\n          Rs. {total.toLocaleString()}\n        </h2>\n      </div>\n    </>\n  )\n}\n","import { useState } from \"react\"\nimport ClientDetails from \"./components/ClientDetails\"\nimport Dates from \"./components/Dates\"\nimport Footer from \"./components/Footer\"\nimport Header from \"./components/Header\"\nimport MainDetails from \"./components/MainDetails\"\nimport Notes from \"./components/Notes\"\nimport Table from \"./components/Table\"\nimport TableForm from \"./components/TableForm\"\n\nfunction App() {\n  const [showInvoice, setShowInvoice] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [address, setAddress] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [bankName, setBankName] = useState(\"\")\n  const [bankAccount, setBankAccount] = useState(\"\")\n  const [website, setWebsite] = useState(\"\")\n  const [clientName, setClientName] = useState(\"\")\n  const [clientAddress, setClientAddress] = useState(\"\")\n  const [invoiceNumber, setInvoiceNumber] = useState(\"\")\n  const [invoiceDate, setInvoiceDate] = useState(\"\")\n  const [dueDate, setDueDate] = useState(\"\")\n  const [notes, setNotes] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [quantity, setQuantity] = useState(\"\")\n  const [price, setPrice] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  const [list, setList] = useState([])\n  const [total, setTotal] = useState(0)\n\n  const handlePrint = () => {\n    window.print()\n  }\n\n  return (\n    <>\n      <main className=\"m-5 p-5 md:max-w-xl md:mx-auto lg:max-w-2xl xl:max-w-4xl bg-white rounded shadow\">\n        {showInvoice ? (\n          <div>\n            <Header handlePrint={handlePrint} />\n\n            <MainDetails name={name} address={address} />\n\n            <ClientDetails\n              clientName={clientName}\n              clientAddress={clientAddress}\n            />\n\n            <Dates\n              invoiceNumber={invoiceNumber}\n              invoiceDate={invoiceDate}\n              dueDate={dueDate}\n            />\n\n            <Table\n              description={description}\n              quantity={quantity}\n              price={price}\n              amount={amount}\n              list={list}\n              setList={setList}\n              total={total}\n              setTotal={setTotal}\n            />\n\n            <Notes notes={notes} />\n\n            <Footer\n              name={name}\n              address={address}\n              website={website}\n              email={email}\n              phone={phone}\n              bankAccount={bankAccount}\n              bankName={bankName}\n            />\n\n            <button\n              onClick={() => setShowInvoice(false)}\n              className=\"mt-5 bg-blue-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-blue-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300\"\n            >\n              Edit Information\n            </button>\n          </div>\n        ) : (\n          <>\n            {/* name, address, email, phone, bank name, bank account number, website client name, client address, invoice number, invoice date, due date, notes */}\n            <h2 className=\"font-bold text-blue uppercase tracking-wide text-4xl pb-5 mb-3\">Invoice Details Form</h2>\n            <div className=\"flex flex-col justify-center\">\n              <article className=\"md:grid grid-cols-2 gap-10\">\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"name\">Your full name</label>\n                  <input\n                    type=\"text\"\n                    name=\"text\"\n                    id=\"name\"\n                    placeholder=\"FirstName LastName\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"address\">Enter your address</label>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    id=\"address\"\n                    placeholder=\"Permanent address\"\n                    autoComplete=\"off\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </div>\n              </article>\n\n              <article className=\"md:grid grid-cols-3 gap-10\">\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"email\">Enter your email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email ID\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"website\">Enter your website</label>\n                  <input\n                    type=\"url\"\n                    name=\"website\"\n                    id=\"website\"\n                    placeholder=\"Valid website\"\n                    autoComplete=\"off\"\n                    value={website}\n                    onChange={(e) => setWebsite(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"phone\">Enter your phone</label>\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    placeholder=\"(+91)\"\n                    autoComplete=\"off\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                  />\n                </div>\n              </article>\n\n              <article className=\"md:grid grid-cols-2 gap-10\">\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"bankName\">Enter your bank name</label>\n                  <input\n                    type=\"text\"\n                    name=\"bankName\"\n                    id=\"bankName\"\n                    placeholder=\"Full Bank Name\"\n                    autoComplete=\"off\"\n                    value={bankName}\n                    onChange={(e) => setBankName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"bankAccount\">\n                    Enter your bank account number\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"bankAccount\"\n                    id=\"bankAccount\"\n                    placeholder=\"Bank Account Number\"\n                    autoComplete=\"off\"\n                    value={bankAccount}\n                    onChange={(e) => setBankAccount(e.target.value)}\n                  />\n                </div>\n              </article>\n\n              <article className=\"md:grid grid-cols-2 gap-10 md:mt-16\">\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"clientName\">Enter your client's name</label>\n                  <input\n                    type=\"text\"\n                    name=\"clientName\"\n                    id=\"clientName\"\n                    placeholder=\"FirstName LastName\"\n                    autoComplete=\"off\"\n                    value={clientName}\n                    onChange={(e) => setClientName(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"clientAddress\">\n                    Enter your client's address\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"clientAddress\"\n                    id=\"clientAddress\"\n                    placeholder=\"Client's Permanent address\"\n                    autoComplete=\"off\"\n                    value={clientAddress}\n                    onChange={(e) => setClientAddress(e.target.value)}\n                  />\n                </div>\n              </article>\n\n              <article className=\"md:grid grid-cols-3 gap-10\">\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"invoiceNumber\">Invoice Number</label>\n                  <input\n                    type=\"text\"\n                    name=\"invoiceNumber\"\n                    id=\"invoiceNumber\"\n                    placeholder=\"Valid Number\"\n                    autoComplete=\"off\"\n                    value={invoiceNumber}\n                    onChange={(e) => setInvoiceNumber(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"invoiceDate\">Invoice Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"invoiceDate\"\n                    id=\"invoiceDate\"\n                    placeholder=\"Invoice Date\"\n                    autoComplete=\"off\"\n                    value={invoiceDate}\n                    onChange={(e) => setInvoiceDate(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"dueDate\">Due Date</label>\n                  <input\n                    type=\"date\"\n                    name=\"dueDate\"\n                    id=\"dueDate\"\n                    placeholder=\"Invoice Date\"\n                    autoComplete=\"off\"\n                    value={dueDate}\n                    onChange={(e) => setDueDate(e.target.value)}\n                  />\n                </div>\n              </article>\n\n              {/* This is our table form */}\n              <article>\n                <TableForm\n                  description={description}\n                  setDescription={setDescription}\n                  quantity={quantity}\n                  setQuantity={setQuantity}\n                  price={price}\n                  setPrice={setPrice}\n                  amount={amount}\n                  setAmount={setAmount}\n                  list={list}\n                  setList={setList}\n                  total={total}\n                  setTotal={setTotal}\n                />\n              </article>\n\n              <label htmlFor=\"notes\">Additional Notes</label>\n              <textarea\n                name=\"notes\"\n                id=\"notes\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Additional notes to the client\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              ></textarea>\n\n              <button\n                onClick={() => setShowInvoice(true)}\n                className=\"bg-blue-500 text-white font-bold py-2 px-8 rounded shadow border-2 border-blue-500 hover:bg-transparent hover:text-blue-500 transition-all duration-300\"\n              >\n                Preview Invoice\n              </button>\n            </div>\n          </>\n        )}\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}